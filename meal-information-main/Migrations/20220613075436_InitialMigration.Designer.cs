// <auto-generated />
using System;
using MealInformation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MealInformation.Migrations
{
    [DbContext(typeof(GibzDbContext))]
    [Migration("20220613075436_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IconMenu", b =>
                {
                    b.Property<Guid>("IconsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MenusId")
                        .HasColumnType("char(36)");

                    b.HasKey("IconsId", "MenusId");

                    b.HasIndex("MenusId");

                    b.ToTable("MenuIcons", (string)null);
                });

            modelBuilder.Entity("MealInformation.Models.Entities.Day", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("MealInformation.Models.Entities.Icon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SourceUri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Icons");
                });

            modelBuilder.Entity("MealInformation.Models.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("longtext");

                    b.Property<string>("Allergenes")
                        .HasColumnType("longtext");

                    b.Property<string>("Balance")
                        .HasColumnType("longtext");

                    b.Property<Guid>("DayId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EnvironmentalImpact")
                        .HasColumnType("longtext");

                    b.Property<string>("MenuComponents")
                        .HasColumnType("longtext");

                    b.Property<decimal>("PriceExternal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PriceInternal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("MealInformation.Models.Entities.NutritionalValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RowIndex")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("NutritionalValues");
                });

            modelBuilder.Entity("IconMenu", b =>
                {
                    b.HasOne("MealInformation.Models.Entities.Icon", null)
                        .WithMany()
                        .HasForeignKey("IconsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealInformation.Models.Entities.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MealInformation.Models.Entities.Menu", b =>
                {
                    b.HasOne("MealInformation.Models.Entities.Day", "Day")
                        .WithMany("Menus")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Day");
                });

            modelBuilder.Entity("MealInformation.Models.Entities.NutritionalValue", b =>
                {
                    b.HasOne("MealInformation.Models.Entities.Menu", "Menu")
                        .WithMany("NutritionalValues")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MealInformation.Models.Entities.Day", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("MealInformation.Models.Entities.Menu", b =>
                {
                    b.Navigation("NutritionalValues");
                });
#pragma warning restore 612, 618
        }
    }
}
