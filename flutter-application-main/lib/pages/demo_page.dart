import 'package:flutter/material.dart';
import 'package:flutter_markdown/flutter_markdown.dart';

import 'package:gibz_mobileapp/pages/page_wrapper.dart';
import 'package:url_launcher/url_launcher.dart';

const staticMD = """
# This is markdown

Let's see whether we can **actually** really *use* this kind of markdown. We might want do print some text __bold__ or _italic_. It does work!

Let's check some emojis: üòò ü•Å ü¶†

- Enummerations
- are
- quite
- nice

And now an enumerated list:

1. Let's
2. see
3. whether
    1. this works
    2. really fine?
4. I even
5. used
    - mixed
    - lists
6. Without any problem at all!

What about a link to the [website](https://www.gibz.ch) https://www.zg.ch?

Here's an image for you all:

![Not working with https://www.gibz.ch in it?](https://www.zg.ch/behoerden/volkswirtschaftsdirektion/gibz/bilderkarussell-gibz/willkommen-in-unserem-modernen-bildungszentrum/@@images/0b13ef12-b87e-4733-8bca-2550d0521681.png)


## Tables anyone?

| Header 1 | Header 2 | Some quite long title here... |
| :------: | :------- | ----------------------------: |
| 1 | 2 | 3 |
| 1 | 2 | 3 |
| 1 | 2 | 3 |
| 1 | 2 | 3 |

## What about checkboxes?

- [ ] Still to do
- [x] Done already :-)
- [ ] An open one

And here are some checkmarks: :white_check_mark:


""";

const staticInfo = """
# Was ist der aktuelle Stand dieser App?

Diese App fungiert als Prototyp einer m√∂glicherweise zu entwickelnden App f√ºr das GIBZ. Mit den Kacheln auf der Startseite werden einige m√∂gliche Inhalte und Funktionen der App exemplarisch illustriert.

## Informationen f√ºr Lernende

Das *Handbuch f√ºr Lernende* ist aktuell als PDF verf√ºgbar und wird von den Lernenden kaum genutzt. Eigentlich w√§re damit jedoch ein wichtiges und m√§chtiges Werkzeug vorhanden. Die geringe Nutzung ist mitunter auf die schlechte Verf√ºgbarkeit (statisches PDF, irgendwo "versteckt" auf der Webseite des GIBZ) und das geringe Mass an Relevanz f√ºr die Zielgruppe zur√ºck zu f√ºhren. **Als App f√ºr das Smartphone mit interaktiven Inhalten, welche durchsucht, gefiltert, geteilt und bewertet werden k√∂nnen, k√∂nnen die bestehenden Inhalte f√ºr die Lernenden und Studierenden des GIBZ attraktiver vermittelt werden.**

## Men√ºplan

F√ºr den Men√ºplan des Restaurant *Treff* existiert eine √∂ffentlich verf√ºgbare API zur Abfrage der aktuellen Angebote f√ºr die jeweils aktuelle Woche. Dieses nette Zusatzfeature f√ºr die App kann dazu verleiten, die App √ºberhaupt zu installieren und ggf. h√§ufiger bzw. regelm√§ssig zu nutzen.

## Parkpl√§tze

Auch die Anzahl verf√ºgbarer Parkpl√§tze im Parkhaus des GIBZ kann √ºber eine √∂ffentliche API abgefragt und innerhalb der App dargestellt werden. Der Nutzen ist begrenzt auf autofahrende Nutzerinnen und Nutzer, kann jedoch analog zum Men√ºplan zu einer regelm√§ssigen Nutzung der App beitragen.

## Informationen

Hier w√§re denkbar, verschiedene aktuelle Inhalte und Hinweise zu platzieren:

- Kurse und Veranstaltungen
- Wichtige Termine
- News aus verschiedenen Berufen
- Organisatorische und Administrative News
  - Materialrechnungen werden verteilt --> Erinnerung an Bezahlung
  - Aktualisiertes Covid-Schutzkonzept ist verf√ºgbar
  - Neue Mitarbeitende im Support
  - etc.

In einem weiteren Ausbauschritt w√§re auch die (selektive) Benachrichtigung mittels *Push Notifications* denkbar.

# Wof√ºr k√∂nnte diese App sonst noch genutzt werden?

Die Erweiterungs- und Ausbaum√∂glichkeiten f√ºr eine GIBZ App sind vielseitig und beinahe unbegrenzt. Denkbare Beispiele mit kurz- bis mittelfristiger Umsetzung sind in den nachfolgenden Abschnitten ausgef√ºhrt.

## Erkundung des GIBZ

Bereits vor rund einem Jahr wurde eine funktionsf√§hige App entwickelt, mit welcher (neue) Lernende am GIBZ das Geb√§ude, die Berufe, die Angebote und den Betrieb der "neuen Schule" auf spielerische Art erkunden sollen. Die App wurde bereits f√ºr den obligatorischen *Review* an Apple √ºbermittelt. Dort wurde die Publikation der App im App Store jedoch abgelehnt, weil eine solche, rein In-House nutzbare App nicht √ºber den Vertriebskanal *App Store* publiziert werden kann/darf. Mit neuen, √∂ffentlich nutzbaren Features (siehe oben) w√§re dieser Kritikpunkt entkr√§ftet.

## Stundenpl√§ne

Die Stundenpl√§ne der Klassen oder gar f√ºr die einzelnen Lernenden k√∂nnten aus verschiedenen Schnittstellen abgerufen und in der App dargestellt werden. Gerade f√ºr Klassen/Berufe mit unregelm√§ssigen Stundenpl√§nen (Blockunterricht; h√§ufig wechselnde Zimmer/Labors; ...) w√§re diese einfache Verf√ºgbarkeit der Stundenpl√§ne hilfreich. M√∂gliche Quellen f√ºr die Rohdaten w√§ren WebUntis oder EDUZug.

## Marktplatz

Ein interner Marktplatz f√ºr Lernende (und Mitarbeitende?) des GIBZ k√∂nnte eingerichtet werden: *Verkaufe Laptop*, *Suche Nachhilfe*, *Biete Mitfahrgelegenheit*, *Suche Trainingspartner/-in*, ...

## Unterricht

F√ºr Informatik-Lernende ist die Arbeit mit *realen Projekten* im Unterricht deutlich interessanter und attraktiver als rein *schulische √úbungen*. Peter Gisler plant, diese App nach der initialen Publikation fortlaufend weiterzuentwickeln - im regul√§ren Unterricht und/oder mit speziell interessierten Lernenden im Rahmen eines Freikurses.

""";

class DemoPage extends StatelessWidget {
  final String title;

  const DemoPage({required this.title, Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return PageWrapper(
      title: 'Informationen',
      child: Markdown(
        selectable: true,
        data: staticInfo,
        onTapLink: (text, url, title) {
          if (url != null && url.isNotEmpty) launch(url);
        },
        styleSheet: MarkdownStyleSheet(
          p: const TextStyle(
            color: Colors.white70,
            fontSize: 18,
            fontFamily: 'Abel',
          ),
          a: const TextStyle(
            color: Colors.white,
            decoration: TextDecoration.underline,
            decorationStyle: TextDecorationStyle.dotted,
          ),
          h1: const TextStyle(
            fontFamily: 'Abel',
            color: Colors.white70,
            fontSize: 28,
          ),
          h2: const TextStyle(
              fontFamily: 'Abel',
              color: Colors.white70,
              fontWeight: FontWeight.bold),
          listIndent: 12,
          listBullet: const TextStyle(color: Colors.white70),
        ),
      ),
    );
  }
}
